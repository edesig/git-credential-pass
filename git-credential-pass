#!/usr/bin/env sh
# Copyright (C) 2023 Edes Istvan Gergely <edesig@gmail.com>. All Rights Reserved.
# This file is licensed under the MIT License.

readonly VERSION=0.2

# Configuration

readonly DEBUG=${GIT_CREDENTIAL_PASS_DEBUG:-false}
readonly SECRET_PATH=${GIT_CREDENTIAL_SECRET_PATH:-git-credential-pass}

# Helper functions

debug(){
	test "$DEBUG" = "false" || echo >&2 git-credential-pass:debug:$@
}


get_secret_keys(){
	# Unfortunately pass lists with tree, so
	# this parsing depends on tree's implementation.
	pass ls "$1" | grep '^.── ' | sed 's:^.── ::g'
}

prepare_input(){
        cat - | grep '.*=.*' | sed 's:=\(.*\):='"'"'\1'"'"':g'
}

get_identity(){
        if test -n "username"; then
                echo "$protocol/$username@$host"
        else
                echo "$protocol/$host"
        fi
}


# Commands

get(){
	test -n "$identity" || identity="$(get_identity)"
	test -n "$secrets" || secrets="$(get_secret_keys "$SECRET_PATH/$identity")"
	test -n "$secrets" || exit 1
	for secret in $secrets; do
		echo "$secret=$(pass "$SECRET_PATH/$identity/$secret")";
	done
	for blank in $blanks; do
		echo "${blank}="
	done
}

store(){
	# We don't want implement store to avoid complexity
	# this script is supposed to be an interface between git and pass
	# in order to keep it flexible we let the user to handle pass
	debug Not Implemented
}

erase(){
	# We are not sure yet if it's a good idea to implement it
	debug Not Implemented
}

debug debug mode on
# get inputs
debug "called with:$@"
stdin=$(prepare_input)
debug "stdin:$stdin"
eval "$stdin"

# parse the parameters
eval set -- $(getopt -o i:s:b: -l identity: -l secret: -l blank: -- $@)
while true; do
	case "$1" in
		-s|--secret)
			secrets="${secrets:-} $2"
			shift 2
			continue ;;
		-b|--blank)
			blanks="${blanks:-} $2"
			shift 2
			continue ;;
		-i|--identity)
			identity="$2"
			shift 2
			continue ;;
		--)
			shift
			break ;;
	esac
done
command="$1"

"$command"
